data = read.csv("train.csv", header = TRUE)
dim(data)
data = read.csv("train.csv", header = TRUE)
dim(data)
data = read.csv("act_train", header = TRUE)
setwd("~/Desktop/predicting-red-hat-business-value")
data = read.csv("act_train", header = TRUE)
setwd("~/Desktop/predicting-red-hat-business-value")
data = read.csv("act_train", header = TRUE)
data = read.csv("act_train.csv", header = TRUE)
dim(data)
setwd("~/Desktop/STAT5003/2022/W1")
#url_link <- paste0("https://apiapex.tesouro.gov.br/aria/")
#download.file(url = url_link, destfile = "Downloads/file_name.xls")
cereal = read.csv("Cereal.csv")
head(cereal)
head(cereal)
class(cereal)
head(cereal)
class(cereal)
dim(cereal)
nrow(cereal)
dim(cereal)
nrow(cereal)
names(cereal)
dim(cereal)
nrow(cereal)
names(cereal)
row.names(cereal)
dim(cereal)
nrow(cereal)
names(cereal)
col.names(cereal)
dim(cereal)
nrow(cereal)
names(cereal)
colnames(cereal)
dim(cereal)
nrow(cereal)
colnames(cereal)
cereal$calories
cereal$[calories]
cereal$calories
cereal[calories]
cereal[cereal$calories]
cereal[,cereal$calories]
cereal[,'calories']
cereal[,"calories"]
cereal$calories[1,10]
cereal$calories[1]
cereal$calories[,10]
cereal$calories[,1]
cereal$calories[10,]
cereal$calories[c(1,10)]
cereal$calories[seq(1,10)]
summary(cereal)
#Kelloggs
summary(mfr)
summary(cereal$mfr)
#Kelloggs
table(cereal$mfr)
#Kelloggs
table(cereal$mfr)
cereal[cereal$mfr == 'K']
#table(cereal$mfr)
cereal[cereal$mfr == 'K']
#table(cereal$mfr)
cereal$mfr == 'K'
#Kelloggs
#table(cereal$mfr)
cereal[mfr == 'K']
#table(cereal$mfr)
cereal[cereal$mfr == 'K']
#table(cereal$mfr)
cereal[cereal$mfr == 'K',]
#Kelloggs
#table(cereal$mfr)
cereal[,cereal$mfr == 'K']
#table(cereal$mfr)
cereal[cereal$mfr == 'K',]
#Kelloggs
view(cereal)
View(cereal)
#table(cereal$mfr)
cereal[cereal$mfr == 'K',]
dim(cereal[cereal$mfr == 'K',])
#Kelloggs
#table(cereal$mfr)
cereal[cereal$mfr == 'K',]
#Kelloggs
table(cereal$mfr)
Kelloggs = cereal[cereal$mfr == 'K',]
table(cereal$mfr)
Kelloggs = cereal[cereal$mfr == 'K',]
Kelloggs
cereal = read.csv("Cereal.csv", stringsAsFactors = TRUE)
View(cereal)
class(cereal)
str(cereal)
str(cereal$mfr)
str(cereal$mfr)
str(cereal$type)
str(cereal$mfr)
str(cereal$type)
nlevels(cereal$mfr)
nlevels(cereal$type)
#cereal.calories = cereal$calories
cereal$cereal.calories = cereal$calories
#cereal.calories = cereal$calories
cereal$cereal.calories = cereal$calories
dim(cereal)
length(cereal$cereal.calories)
cereal[cereal$cereal.calories,]
View(cereal)
cereal$cereal.calories[seq(5,10)]
cereal = read.csv("Cereal.csv", stringsAsFactors = TRUE)
#cereal.calories = cereal$calories
cereal.calories = cereal$calories
dim(cereal)
#cereal.calories = cereal$calories
cereal.calories = cereal$calories
length(cereal$cereal.calories)
length(cereal.calories)
cereal.calories[seq(5,10)]
c(cereal.calories, 100)
c(cereal.calories, 100)
length(cereal.calories)
c(cereal.calories, 100)
length(cereal.calories)
c(cereal.calories, 100)
length(cereal.calories)
#cereal.calories = cereal$calories
cereal.calories = cereal$calories
length(cereal.calories)
cereal.calories
cereal.calories = c(cereal.calories, 100)
length(cereal.calories)
as.matrix(cereal)
str(cereal)
str(as.matrix(cereal))
str(as.matrix(cereal))
class(as.matrix(cereal))
as.matrix(cereal)[, c(-"mfr")]
as.matrix(cereal)[, c(-1,-2,-3)]
#class(as.matrix(cereal))
as.matrix(cereal)[, c(-1,-2,-3)]
class(as.matrix(cereal))
as.matrix(cereal)
#as.matrix(cereal)[, c(-1,-2,-3)]
class(as.matrix(cereal)[, c(-1,-2,-3)])
#as.matrix(cereal)[, c(-1,-2,-3)]
str(as.matrix(cereal)[, c(-1,-2,-3)])
dim(as.matrix(cereal))
dim(as.matrix(cereal)[, c(-1,-2,-3)])
str(as.matrix(cereal)[, c(-1,-2,-3)])
#as.matrix(cereal)[, c(-1,-2,-3)]
ma = as.matrix(cereal)[, c(-1,-2,-3)]
str(ma)
#as.matrix(cereal)[, c(-1,-2,-3)]
ma = as.matrix(cereal)[, c(-1,-2,-3)]
dim(ma)
str(ma)
str.at('2')
#as.matrix(cereal)[, c(-1,-2,-3)]
ma = as.matrix(cereal)[, c(-1,-2,-3)]
dim(ma)
class(ma)
#as.matrix(cereal)[, c(-1,-2,-3)]
ma = data.matrix(cereal)[, c(-1,-2,-3)]
dim(ma)
class(ma)
#as.matrix(cereal)[, c(-1,-2,-3)]
ma = data.matrix(cereal)[, c(-1,-2,-3)]
dim(ma)
class(ma)
head(ma)
#as.matrix(cereal)[, c(-1,-2,-3)]
ma = data.matrix(cereal)[, c(-1,-2,-3)]
dim(ma)
class(ma)
head(ma)
str(ma)
#as.matrix(cereal)[, c(-1,-2,-3)]
asm = as.matrix(cereal)[, c(-1,-2,-3)]
str(asm)
ma = data.matrix(cereal)[, c(-1,-2,-3)]
str(ma)
?as.numeric
is.numeric(5)
is.numeric('5')
as.numeric('5')
apply(cereal, as.numeric)
?apply
#apply(cereal, as.numeric)
cereal.values
apply(cereal, 2, as.numeric)
cereal = read.csv("Cereal.csv", stringsAsFactors = TRUE)
as.matrix(cereal)
as.matrix(cereal)
str(cereal)
as.matrix(cereal)
str(as.matrix(cereal))
data.matrix(cereal)[, c(-1,-2,-3)]
dim(data.matrix(cereal)[, c(-1,-2,-3)])
class(data.matrix(cereal)[, c(-1,-2,-3)])
str(data.matrix(cereal)[, c(-1,-2,-3)])
summary(cereal$sodium)
max(cereal$sodium)
min(cereal$sodium)
sd(cereal$sodium)
mean(cereal$sodium)
head(cereal)
head(cereal)
apply(cereal$mfr, sodium, mean)
head(cereal)
apply(cereal$mfr, 2, mean)
head(cereal)
apply(cereal, 2, mean)
head(cereal)
apply(cereal$sodium, 2, mean)
head(cereal)
apply(cereal$sodium, cereal$mfr, mean)
cereal$sodium
cereal$mfr
head(cereal)
apply(cereal$mfr, cereal$sodium, mean)
lapply(data.matrix(cereal)[, c(-1,-2,-3)])
lapply(data.matrix(cereal)[, c(-1,-2,-3)],class)
lapply(data.matrix(cereal))
lapply(as.matrix(cereal))
lapply(as.matrix(cereal),class)
head(cereal)
sapply(cereal$mfr, cereal$sodium, mean)
head(cereal)
sapply(cereal$mfr, mean)
head(cereal)
sapply(cereal$sodium, mean)
head(cereal)
sapply(cereal, mean)
head(cereal)
sapply(cereal$sodium, mean)
head(cereal)
tapply(cereal$sodium, cereal$mfr, mean)
head(data.matrix(cereal)[, c(-1,-2,-3)])
dim(data.matrix(cereal)[, c(-1,-2,-3)])
class(data.matrix(cereal)[, c(-1,-2,-3)])
str(data.matrix(cereal)[, c(-1,-2,-3)])
head(data.matrix(cereal)[, c(-1,-2,-3)])
dim(data.matrix(cereal)[, c(-1,-2,-3)])
class(data.matrix(cereal)[, c(-1,-2,-3)])
str(data.matrix(cereal)[, c(-1,-2,-3)])
sapply(data.matrix(cereal)[, c(-1,-2,-3)], class)
head(data.matrix(cereal)[, c(-1,-2,-3)])
dim(data.matrix(cereal)[, c(-1,-2,-3)])
class(data.matrix(cereal)[, c(-1,-2,-3)])
str(data.matrix(cereal)[, c(-1,-2,-3)])
lapply(data.matrix(cereal)[, c(-1,-2,-3)], class)
head(data.matrix(cereal)[, c(-1,-2,-3)])
dim(data.matrix(cereal)[, c(-1,-2,-3)])
class(data.matrix(cereal)[, c(-1,-2,-3)])
str(data.matrix(cereal)[, c(-1,-2,-3)])
head(as.matrix(cereal))
str(as.matrix(cereal))
boxplot(cereal$sodium ~ cereal$mfr)
plot(cereal$calories ~ cereal$sodium)
cereal[cereal$mfr == 'K']
cereal[cereal$mfr == "K"]
cereal[cereal$mfr == "K",]
?write.csv
Kelloggs = cereal[cereal$mfr == "K",]
write.csv(Kelloggs,file = "kelloggs.csv")
library(shiny)
library(readr)
library(dplyr)
library(ggplot2)
install.packages(readr)
install.packages('readr')
install.packages(readr)
library(readr)
library(readr)
#library(dplyr)
#library(tidyverse)
#url_link <- paste0("https://apiapex.tesouro.gov.br/aria/")
#download.file(url = url_link, destfile = "Downloads/file_name.xls")
cereal = read.csv("Cereal.csv")
head(cereal)
class(cereal)
cereal = read.csv("Cereal.csv", stringsAsFactors = TRUE)
str(cereal$mfr)
str(cereal$type)
str(cereal['fr'])
str(cereal['mfr'])
plot(cereal$calories ~ cereal$sodium)
plot(cereal$sodium ~ cereal$calories)
library(shiny); runApp('intro-02.R')
